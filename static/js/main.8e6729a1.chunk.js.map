{"version":3,"sources":["components/GoodsItem/index.tsx","components/GoodsList/index.tsx","components/Input/index.tsx","components/NewGoods/index.tsx","App.tsx","index.tsx"],"names":["GoodsItem","props","title","price","number","removeGoods","changeNumber","scope","type","className","name","min","value","required","onChange","bind","onClick","GoodsList","goods","sortByTitle","sortByPrice","sortByN","map","item","alphaExp","Input","changeValue","error","saveValue","styleClasses","ClassNames","id","placeholder","e","onBlur","test","step","initialState","NewGoods","addGoods","useState","inputValues","setInputValues","inputErrors","setInputErrors","prevState","event","target","onSubmit","preventDefault","Object","values","every","keys","key","App","goodsFromServer","setGoods","savedGoods","length","newGoods","filter","element","sortedByTitle","sort","a","b","localeCompare","sortedByN","sortedByPrice","i","Number","reduce","acc","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e6729a1.chunk.js","sourcesContent":["import React from 'react';\n// import propTypes from 'prop-types';\nimport './GoodsItem.scss';\n\ninterface IGoodsItemProps {\n  title: string;\n  price: number;\n  number: number;\n  removeGoods: (title: string) => void;\n  changeNumber: (name: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const GoodsItem = (props: IGoodsItemProps) => {\n  const { title, price, number, removeGoods, changeNumber } = props;\n\n  return (\n    <tr>\n      <th scope=\"row\">{title}</th>\n      <td>\n        <input\n          type=\"number\"\n          className=\"number-input\"\n          name={title}\n          min=\"1\"\n          value={number}\n          required\n          onChange={changeNumber.bind(this, title)}\n        />\n      </td>\n      <td>{price}</td>\n      <td>\n        <button\n          onClick={() => removeGoods(title)}\n          type=\"button\"\n          className=\"btn-close\"\n        />\n      </td>\n    </tr>\n  );\n};\n\n// GoodsItem.propTypes = {\n//   title: propTypes.string.isRequired,\n//   price: propTypes.number.isRequired,\n//   number: propTypes.number.isRequired,\n//   removeGoods: propTypes.func.isRequired,\n//   changeNumber: propTypes.func.isRequired,\n// };\n","import React from 'react';\n// import propTypes from 'prop-types';\n\nimport { GoodsItem } from '../GoodsItem';\nimport { IGoodsType } from '../../App';\n\ninterface IListProps {\n  goods: Array<IGoodsType>;\n  removeGoods: (title: string) => void;\n  sortByTitle: () => void;\n  sortByPrice : () => void;\n  sortByN: () => void;\n  changeNumber: (name: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const GoodsList = ({ goods, removeGoods, sortByTitle, sortByPrice, sortByN, changeNumber }: IListProps) => (\n  <table className=\"table table-hover\">\n    <thead className=\"table-dark\">\n      <tr>\n        <th scope=\"col\">\n          <button\n            className=\"btn btn-light\"\n            onClick={sortByTitle}\n            type=\"button\"\n          >\n            Title\n          </button>\n        </th>\n        <th scope=\"col\">\n          <button\n            className=\"btn btn-light\"\n            onClick={sortByN}\n            type=\"button\"\n          >\n            N\n          </button>\n        </th>\n        <th scope=\"col\">\n          <button\n            className=\"btn btn-light\"\n            onClick={sortByPrice}\n            type=\"button\"\n          >\n            Cost\n          </button>\n        </th>\n        <th scope=\"col\" />\n      </tr>\n    </thead>\n    <tbody>\n      {goods.map(item => (\n        <GoodsItem\n          key={item.title}\n          {...item}\n          removeGoods={removeGoods}\n          changeNumber={changeNumber}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\n// GoodsList.propTypes = {\n//   goods: propTypes.arrayOf(\n//     propTypes.shape({\n//       title: propTypes.string.isRequired,\n//       number: propTypes.number.isRequired,\n//       price: propTypes.number.isRequired,\n//     }),\n//   ),\n//   removeGoods: propTypes.func.isRequired,\n//   sortByTitle: propTypes.func.isRequired,\n//   sortByN: propTypes.func.isRequired,\n//   sortByPrice: propTypes.func.isRequired,\n//   changeNumber: propTypes.func.isRequired,\n\n// };\n\n// GoodsList.defaultProps = {\n//   goods: [],\n// };\n","import React from 'react';\nimport './Input.scss';\nimport ClassNames from 'classnames';\n// import PropTypes from 'prop-types';\n\nconst alphaExp = /^[a-zA-Z]+$/;\n\ninterface IInputProps {\n  name: string;\n  changeValue: (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>, name: string) => void;\n  value: string;\n  error: string;\n  saveValue: (name: string, error?: string) => void;\n}\n\nexport const Input = ({ name, changeValue, value, error, saveValue }: IInputProps) => {\n  const validateTitle = () => {\n    if (!alphaExp.test(value)) {\n      saveValue(name, `Please add correct ${name}`);\n\n      return;\n    }\n\n    saveValue(name);\n  };\n\n  const validateValue = () => {\n    if (!value) {\n      saveValue(name, `Please add ${name}`);\n\n      return;\n    }\n\n    if (name === 'title') {\n      validateTitle();\n\n      return;\n    }\n\n    saveValue(name);\n  };\n\n  const styleClasses = ClassNames('form-control', {\n    'is-invalid': error,\n  });\n\n  return (\n    <div className=\"col-auto\">\n      {\n        name === 'number'\n          ? (\n            <label>\n            {name}\n            <input\n            type=\"number\"\n            className={styleClasses}\n            id=\"quantity\"\n            name=\"quantity\"\n            min=\"1\"\n            placeholder={name}\n            value={value}\n            required\n            onChange={e => changeValue(e, name)}\n          />\n          </label>\n          )\n          : name === 'title'\n          ? (\n            <textarea\n              className={styleClasses}\n              id={name}\n              placeholder={name}\n              value={value}\n              required\n              onChange={e => changeValue(e, name)}\n              onBlur={validateValue}\n            />\n          ) : (\n            <label>\n              {name}\n              <input\n              type=\"number\"\n              className={styleClasses}\n              id=\"quantity\"\n              name=\"quantity\"\n              step=\"0.01\"\n              min=\"0\"\n              placeholder={name}\n              value={value}\n              required\n              onChange={e => changeValue(e, name)}\n            />\n            </label>\n          )\n      }\n      <div className=\"invalid-feedback\">\n        {error}\n      </div>\n    </div>\n  );\n};\n\n// Input.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   changeValue: PropTypes.func.isRequired,\n//   value: PropTypes.string.isRequired,\n//   error: PropTypes.string.isRequired,\n//   saveValue: PropTypes.func.isRequired,\n// };\n","import React, { useState } from 'react';\n// import propTypes from 'prop-types';\nimport { Input } from '../Input';\nimport './NewGoods.scss';\nimport { IGoodsType } from '../../App';\n\n\n\nconst initialState: IGoodsType = {\n  title: '',\n  number: 0,\n  price: 0\n};\n\ninterface INewGoodsProps {\n  addGoods: (goods:IGoodsType) => void;\n}\n\nexport const NewGoods = ({ addGoods }: INewGoodsProps) => {\n  const [inputValues, setInputValues] = useState(initialState);\n  const [inputErrors, setInputErrors] = useState(initialState);\n\n  function saveValue(name: string, error = '') {\n    setInputValues((prevState: IGoodsType) => ({\n      ...prevState,\n      [name]: prevState[name],\n    }));\n\n    setInputErrors(prevState => ({\n      ...prevState,\n      [name]: error,\n    }));\n  }\n\n  function addNewGoods(event: React.ChangeEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (Object.values(inputErrors).every(error => !error)\n      && Object.values(inputValues).every(value => value)) {\n      addGoods({ ...inputValues });\n\n      setInputValues(initialState);\n      setInputErrors(initialState);\n    }\n  }\n\n  function changeValue(event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>, name: string) {\n    const { value } = event.target;\n    \n    setInputValues(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  }\n\n  return (\n    <form\n      className=\"form row gy-2 gx-3 align-items-center\"\n      onSubmit={addNewGoods}\n    >\n      {\n        Object.keys(inputValues).map(key => (\n          <Input\n            key={key}\n            name={key}\n            value={inputValues[key]}\n            error={inputErrors[key]}\n            changeValue={changeValue}\n            saveValue={saveValue}\n          />\n        ))\n      }\n      <button\n        type=\"submit\"\n        className=\"button btn btn-outline-secondary\"\n      >\n        add new goods\n      </button>\n    </form>\n  );\n};\n\n// NewGoods.propTypes = {\n//   addGoods: propTypes.func.isRequired,\n// };\n","import React, { useState } from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport { NewGoods } from './components/NewGoods';\nimport goodsFromServer from './api/goods.json';\n\nexport interface IGoodsType {\n  [x: string]: any;\n  title: string;\n  price: number;\n  number: number;\n}\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n\n  function addGoods(savedGoods: IGoodsType):void {\n    setGoods([...goods, savedGoods]);\n  }\n\n  function removeGoods(item: string):void {\n    const newGoods = goods.filter(element => element.title !== item);\n\n    setGoods([...newGoods]);\n  }\n\n  function sortByTitle():void {\n    const sortedByTitle = [...goods].sort((a, b) => (\n      a.title.localeCompare(b.title)\n    ));\n\n    setGoods(sortedByTitle);\n  }\n\n  function sortByN() {\n    const sortedByN = [...goods].sort((a, b) => (\n      b.number - a.number\n    ));\n\n    setGoods(sortedByN);\n  }\n\n  function sortByPrice() {\n    const sortedByPrice = [...goods].sort((a, b) => (\n      b.price - a.price\n    ));\n\n    setGoods(sortedByPrice);\n  }\n\n  function removeAllGoods() {\n    setGoods([]);\n  }\n\n  const changeNumber = (name: string, event: React.ChangeEvent<HTMLInputElement>) => {\n    const newGoods = [...goods];\n\n    for (let i = 0; i < newGoods.length; i += 1) {\n      if (newGoods[i].title === event.target.name) {\n        newGoods[i].number = Number(event.target.value);\n      }\n    }\n\n    setGoods(newGoods);\n  };\n\n  const getSum = () => {\n    const callback = (acc: number, value: IGoodsType) => acc + (value.number * value.price);\n    const currentSum = goods.reduce(callback, 0);\n\n    return currentSum;\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h2 className=\"display-6\">Add goods</h2>\n        <NewGoods addGoods={addGoods} />\n      </div>\n      <div className=\"row\">\n        {goods.length\n          ? (\n            <div>\n              <div>\n                <h1 className=\"display-4\">Shopping cart</h1>\n                <GoodsList\n                  goods={goods}\n                  removeGoods={removeGoods}\n                  sortByTitle={sortByTitle}\n                  sortByN={sortByN}\n                  sortByPrice={sortByPrice}\n                  changeNumber={changeNumber}\n                />\n                <button\n                  onClick={() => removeAllGoods()}\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary\"\n                >\n                  Clear\n                </button>\n              </div>\n              <h4 className=\"display-6 sum\">\n                Sum:\n                {getSum()}\n              </h4>\n            </div>\n\n          )\n          : (\n            <h4 className=\"display-4\">\n              Add your goods\n            </h4>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}